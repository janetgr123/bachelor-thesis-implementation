Excluding: ch.bt.benchmark.baseline.BaselineBuildIndex.buildIndex, does not match VolumeHidingOptTrapdoor[0-9]?
Excluding: ch.bt.benchmark.baseline.BaselineSearch.search, does not match VolumeHidingOptTrapdoor[0-9]?
Excluding: ch.bt.benchmark.baseline.BaselineTrapdoor.trapdoor, does not match VolumeHidingOptTrapdoor[0-9]?
Excluding: ch.bt.benchmark.dpVolumeHiding.DpVolumeHidingBuildIndex.buildIndex, does not match VolumeHidingOptTrapdoor[0-9]?
Excluding: ch.bt.benchmark.dpVolumeHiding.DpVolumeHidingSearch.search, does not match VolumeHidingOptTrapdoor[0-9]?
Excluding: ch.bt.benchmark.dpVolumeHiding.DpVolumeHidingSearch2.search2, does not match VolumeHidingOptTrapdoor[0-9]?
Excluding: ch.bt.benchmark.dpVolumeHiding.DpVolumeHidingTrapdoor.trapdoor, does not match VolumeHidingOptTrapdoor[0-9]?
Excluding: ch.bt.benchmark.dpVolumeHiding.DpVolumeHidingTrapdoor2.trapdoor2, does not match VolumeHidingOptTrapdoor[0-9]?
Excluding: ch.bt.benchmark.volumeHiding.VolumeHidingBuildIndex.buildIndex, does not match VolumeHidingOptTrapdoor[0-9]?
Excluding: ch.bt.benchmark.volumeHiding.VolumeHidingSearch.search, does not match VolumeHidingOptTrapdoor[0-9]?
Excluding: ch.bt.benchmark.volumeHiding.VolumeHidingTrapdoor.trapdoor, does not match VolumeHidingOptTrapdoor[0-9]?
Excluding: ch.bt.benchmark.volumeHidingOpt.VolumeHidingOptBuildIndex.buildIndex, does not match VolumeHidingOptTrapdoor[0-9]?
Excluding: ch.bt.benchmark.volumeHidingOpt.VolumeHidingOptSearch.search, does not match VolumeHidingOptTrapdoor[0-9]?
# JMH version: 1.37
# VM version: JDK 17.0.9, OpenJDK 64-Bit Server VM, 17.0.9+9-Ubuntu-122.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: -server -javaagent:/home/janet/.local/share/JetBrains/Toolbox/apps/intellij-idea-ultimate/lib/idea_rt.jar=43391:/home/janet/.local/share/JetBrains/Toolbox/apps/intellij-idea-ultimate/bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 10 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ch.bt.benchmark.volumeHidingOpt.VolumeHidingOptTrapdoor.trapdoor

# Run progress: 0.00% complete, ETA 00:03:40
Warmup forking using command: [/usr/lib/jvm/java-17-openjdk-amd64/bin/java, -server, -javaagent:/home/janet/.local/share/JetBrains/Toolbox/apps/intellij-idea-ultimate/lib/idea_rt.jar=43391:/home/janet/.local/share/JetBrains/Toolbox/apps/intellij-idea-ultimate/bin, -Dfile.encoding=UTF-8, -XX:+UnlockDiagnosticVMOptions, -XX:+UnlockExperimentalVMOptions, -DcompilerBlackholesEnabled=true, -XX:CompileCommandFile=/tmp/jmh11248459235723245309compilecommand, -cp, /home/janet/ETH/Bachelor Thesis/bachelor-thesis-implementation/bachelor-thesis-implementation/target/test-classes:/home/janet/ETH/Bachelor Thesis/bachelor-thesis-implementation/bachelor-thesis-implementation/target/classes:/home/janet/.m2/repository/org/bouncycastle/bc-fips/1.0.2.4/bc-fips-1.0.2.4.jar:/home/janet/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.10.1/junit-jupiter-engine-5.10.1.jar:/home/janet/.m2/repository/org/junit/platform/junit-platform-engine/1.10.1/junit-platform-engine-1.10.1.jar:/home/janet/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/home/janet/.m2/repository/org/junit/platform/junit-platform-commons/1.10.1/junit-platform-commons-1.10.1.jar:/home/janet/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.1/junit-jupiter-api-5.10.1.jar:/home/janet/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/janet/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.1/junit-jupiter-params-5.10.1.jar:/home/janet/.m2/repository/org/testcontainers/postgresql/1.19.2/postgresql-1.19.2.jar:/home/janet/.m2/repository/org/testcontainers/jdbc/1.19.2/jdbc-1.19.2.jar:/home/janet/.m2/repository/org/testcontainers/database-commons/1.19.2/database-commons-1.19.2.jar:/home/janet/.m2/repository/org/testcontainers/testcontainers/1.18.3/testcontainers-1.18.3.jar:/home/janet/.m2/repository/org/apache/commons/commons-compress/1.23.0/commons-compress-1.23.0.jar:/home/janet/.m2/repository/org/rnorth/duct-tape/duct-tape/1.0.8/duct-tape-1.0.8.jar:/home/janet/.m2/repository/org/jetbrains/annotations/17.0.0/annotations-17.0.0.jar:/home/janet/.m2/repository/com/github/docker-java/docker-java-api/3.3.0/docker-java-api-3.3.0.jar:/home/janet/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.3/jackson-annotations-2.10.3.jar:/home/janet/.m2/repository/com/github/docker-java/docker-java-transport-zerodep/3.3.0/docker-java-transport-zerodep-3.3.0.jar:/home/janet/.m2/repository/com/github/docker-java/docker-java-transport/3.3.0/docker-java-transport-3.3.0.jar:/home/janet/.m2/repository/net/java/dev/jna/jna/5.12.1/jna-5.12.1.jar:/home/janet/.m2/repository/org/apache/commons/commons-lang3/3.12.0/commons-lang3-3.12.0.jar:/home/janet/.m2/repository/org/slf4j/slf4j-api/2.0.9/slf4j-api-2.0.9.jar:/home/janet/.m2/repository/ch/qos/logback/logback-classic/1.2.9/logback-classic-1.2.9.jar:/home/janet/.m2/repository/ch/qos/logback/logback-core/1.2.9/logback-core-1.2.9.jar:/home/janet/.m2/repository/org/apache/logging/log4j/log4j-core/2.20.0/log4j-core-2.20.0.jar:/home/janet/.m2/repository/org/apache/logging/log4j/log4j-slf4j2-impl/2.20.0/log4j-slf4j2-impl-2.20.0.jar:/home/janet/.m2/repository/org/apache/logging/log4j/log4j-api/2.20.0/log4j-api-2.20.0.jar:/home/janet/.m2/repository/org/apache/commons/commons-math3/3.6.1/commons-math3-3.6.1.jar:/home/janet/.m2/repository/org/jgrapht/jgrapht-core/1.5.2/jgrapht-core-1.5.2.jar:/home/janet/.m2/repository/org/jheaps/jheaps/0.14/jheaps-0.14.jar:/home/janet/.m2/repository/org/apfloat/apfloat/1.10.1/apfloat-1.10.1.jar:/home/janet/.m2/repository/org/openjdk/jmh/jmh-core/1.37/jmh-core-1.37.jar:/home/janet/.m2/repository/net/sf/jopt-simple/jopt-simple/5.0.4/jopt-simple-5.0.4.jar:/home/janet/.m2/repository/org/openjdk/jmh/jmh-generator-annprocess/1.37/jmh-generator-annprocess-1.37.jar:/home/janet/.m2/repository/org/postgresql/postgresql/42.6.0/postgresql-42.6.0.jar:/home/janet/.m2/repository/org/checkerframework/checker-qual/3.31.0/checker-qual-3.31.0.jar:/home/janet/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/home/janet/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/janet/.m2/repository/org/apache/commons/commons-csv/1.10.0/commons-csv-1.10.0.jar, org.openjdk.jmh.runner.ForkedMain, 127.0.0.1, 40467]
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 661.234 ns/op
Iteration   1: 651.961 ns/op
Iteration   2: 631.976 ns/op
Iteration   3: 661.987 ns/op
Iteration   4: 678.155 ns/op
Iteration   5: 638.704 ns/op
Iteration   6: 703.271 ns/op
Iteration   7: 679.952 ns/op
Iteration   8: 659.053 ns/op
Iteration   9: 647.124 ns/op
Iteration  10: 689.683 ns/op

# Run progress: 50.00% complete, ETA 00:01:59
Forking using command: [/usr/lib/jvm/java-17-openjdk-amd64/bin/java, -server, -javaagent:/home/janet/.local/share/JetBrains/Toolbox/apps/intellij-idea-ultimate/lib/idea_rt.jar=43391:/home/janet/.local/share/JetBrains/Toolbox/apps/intellij-idea-ultimate/bin, -Dfile.encoding=UTF-8, -XX:+UnlockDiagnosticVMOptions, -XX:+UnlockExperimentalVMOptions, -DcompilerBlackholesEnabled=true, -XX:CompileCommandFile=/tmp/jmh11248459235723245309compilecommand, -cp, /home/janet/ETH/Bachelor Thesis/bachelor-thesis-implementation/bachelor-thesis-implementation/target/test-classes:/home/janet/ETH/Bachelor Thesis/bachelor-thesis-implementation/bachelor-thesis-implementation/target/classes:/home/janet/.m2/repository/org/bouncycastle/bc-fips/1.0.2.4/bc-fips-1.0.2.4.jar:/home/janet/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.10.1/junit-jupiter-engine-5.10.1.jar:/home/janet/.m2/repository/org/junit/platform/junit-platform-engine/1.10.1/junit-platform-engine-1.10.1.jar:/home/janet/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/home/janet/.m2/repository/org/junit/platform/junit-platform-commons/1.10.1/junit-platform-commons-1.10.1.jar:/home/janet/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.1/junit-jupiter-api-5.10.1.jar:/home/janet/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/janet/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.1/junit-jupiter-params-5.10.1.jar:/home/janet/.m2/repository/org/testcontainers/postgresql/1.19.2/postgresql-1.19.2.jar:/home/janet/.m2/repository/org/testcontainers/jdbc/1.19.2/jdbc-1.19.2.jar:/home/janet/.m2/repository/org/testcontainers/database-commons/1.19.2/database-commons-1.19.2.jar:/home/janet/.m2/repository/org/testcontainers/testcontainers/1.18.3/testcontainers-1.18.3.jar:/home/janet/.m2/repository/org/apache/commons/commons-compress/1.23.0/commons-compress-1.23.0.jar:/home/janet/.m2/repository/org/rnorth/duct-tape/duct-tape/1.0.8/duct-tape-1.0.8.jar:/home/janet/.m2/repository/org/jetbrains/annotations/17.0.0/annotations-17.0.0.jar:/home/janet/.m2/repository/com/github/docker-java/docker-java-api/3.3.0/docker-java-api-3.3.0.jar:/home/janet/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.3/jackson-annotations-2.10.3.jar:/home/janet/.m2/repository/com/github/docker-java/docker-java-transport-zerodep/3.3.0/docker-java-transport-zerodep-3.3.0.jar:/home/janet/.m2/repository/com/github/docker-java/docker-java-transport/3.3.0/docker-java-transport-3.3.0.jar:/home/janet/.m2/repository/net/java/dev/jna/jna/5.12.1/jna-5.12.1.jar:/home/janet/.m2/repository/org/apache/commons/commons-lang3/3.12.0/commons-lang3-3.12.0.jar:/home/janet/.m2/repository/org/slf4j/slf4j-api/2.0.9/slf4j-api-2.0.9.jar:/home/janet/.m2/repository/ch/qos/logback/logback-classic/1.2.9/logback-classic-1.2.9.jar:/home/janet/.m2/repository/ch/qos/logback/logback-core/1.2.9/logback-core-1.2.9.jar:/home/janet/.m2/repository/org/apache/logging/log4j/log4j-core/2.20.0/log4j-core-2.20.0.jar:/home/janet/.m2/repository/org/apache/logging/log4j/log4j-slf4j2-impl/2.20.0/log4j-slf4j2-impl-2.20.0.jar:/home/janet/.m2/repository/org/apache/logging/log4j/log4j-api/2.20.0/log4j-api-2.20.0.jar:/home/janet/.m2/repository/org/apache/commons/commons-math3/3.6.1/commons-math3-3.6.1.jar:/home/janet/.m2/repository/org/jgrapht/jgrapht-core/1.5.2/jgrapht-core-1.5.2.jar:/home/janet/.m2/repository/org/jheaps/jheaps/0.14/jheaps-0.14.jar:/home/janet/.m2/repository/org/apfloat/apfloat/1.10.1/apfloat-1.10.1.jar:/home/janet/.m2/repository/org/openjdk/jmh/jmh-core/1.37/jmh-core-1.37.jar:/home/janet/.m2/repository/net/sf/jopt-simple/jopt-simple/5.0.4/jopt-simple-5.0.4.jar:/home/janet/.m2/repository/org/openjdk/jmh/jmh-generator-annprocess/1.37/jmh-generator-annprocess-1.37.jar:/home/janet/.m2/repository/org/postgresql/postgresql/42.6.0/postgresql-42.6.0.jar:/home/janet/.m2/repository/org/checkerframework/checker-qual/3.31.0/checker-qual-3.31.0.jar:/home/janet/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/home/janet/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/janet/.m2/repository/org/apache/commons/commons-csv/1.10.0/commons-csv-1.10.0.jar, org.openjdk.jmh.runner.ForkedMain, 127.0.0.1, 40467]
# Fork: 1 of 1
# Warmup Iteration   1: 642.928 ns/op
Iteration   1: 624.810 ns/op
Iteration   2: 629.924 ns/op
Iteration   3: 621.916 ns/op
Iteration   4: 639.477 ns/op
Iteration   5: 601.449 ns/op
Iteration   6: 663.050 ns/op
Iteration   7: 723.944 ns/op
Iteration   8: 745.089 ns/op
Iteration   9: 744.892 ns/op
Iteration  10: 694.605 ns/op


Result "ch.bt.benchmark.volumeHidingOpt.VolumeHidingOptTrapdoor.trapdoor":
  668.915 ±(99.9%) 81.867 ns/op [Average]
  (min, avg, max) = (601.449, 668.915, 745.089), stdev = 54.150
  CI (99.9%): [587.048, 750.783] (assumes normal distribution)


# Run complete. Total time: 00:03:59

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                         Mode  Cnt    Score    Error  Units
volumeHidingOpt.VolumeHidingOptTrapdoor.trapdoor  avgt   10  668.915 ± 81.867  ns/op

Benchmark result is saved to src/test/resources/benchmark/volumeHidingOpt/benchmark-results-Trapdoor.csv
